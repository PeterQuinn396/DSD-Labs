// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/26/2017 15:29:17"

// 
// Device: Altera EP2C20F484C7 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module g07_7_segment_decoder (
	code,
	mode,
	segments_out);
input 	[3:0] code;
input 	mode;
output 	[6:0] segments_out;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \mode~combout ;
wire \Mux6~0_combout ;
wire \Mux6~1_combout ;
wire \Mux6~2_combout ;
wire \Mux5~0_combout ;
wire \Mux5~1_combout ;
wire \Mux4~0_combout ;
wire \Mux4~1_combout ;
wire \Mux3~0_combout ;
wire \Mux3~1_combout ;
wire \Mux3~2_combout ;
wire \Mux2~0_combout ;
wire \Mux2~1_combout ;
wire \Mux2~2_combout ;
wire \Mux1~0_combout ;
wire \Mux1~1_combout ;
wire \Mux0~0_combout ;
wire \Mux0~1_combout ;
wire \Mux0~2_combout ;
wire [3:0] \code~combout ;


cycloneii_io \code[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\code~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(code[1]));
// synopsys translate_off
defparam \code[1]~I .input_async_reset = "none";
defparam \code[1]~I .input_power_up = "low";
defparam \code[1]~I .input_register_mode = "none";
defparam \code[1]~I .input_sync_reset = "none";
defparam \code[1]~I .oe_async_reset = "none";
defparam \code[1]~I .oe_power_up = "low";
defparam \code[1]~I .oe_register_mode = "none";
defparam \code[1]~I .oe_sync_reset = "none";
defparam \code[1]~I .operation_mode = "input";
defparam \code[1]~I .output_async_reset = "none";
defparam \code[1]~I .output_power_up = "low";
defparam \code[1]~I .output_register_mode = "none";
defparam \code[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \code[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\code~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(code[2]));
// synopsys translate_off
defparam \code[2]~I .input_async_reset = "none";
defparam \code[2]~I .input_power_up = "low";
defparam \code[2]~I .input_register_mode = "none";
defparam \code[2]~I .input_sync_reset = "none";
defparam \code[2]~I .oe_async_reset = "none";
defparam \code[2]~I .oe_power_up = "low";
defparam \code[2]~I .oe_register_mode = "none";
defparam \code[2]~I .oe_sync_reset = "none";
defparam \code[2]~I .operation_mode = "input";
defparam \code[2]~I .output_async_reset = "none";
defparam \code[2]~I .output_power_up = "low";
defparam \code[2]~I .output_register_mode = "none";
defparam \code[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \mode~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\mode~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(mode));
// synopsys translate_off
defparam \mode~I .input_async_reset = "none";
defparam \mode~I .input_power_up = "low";
defparam \mode~I .input_register_mode = "none";
defparam \mode~I .input_sync_reset = "none";
defparam \mode~I .oe_async_reset = "none";
defparam \mode~I .oe_power_up = "low";
defparam \mode~I .oe_register_mode = "none";
defparam \mode~I .oe_sync_reset = "none";
defparam \mode~I .operation_mode = "input";
defparam \mode~I .output_async_reset = "none";
defparam \mode~I .output_power_up = "low";
defparam \mode~I .output_register_mode = "none";
defparam \mode~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Mux6~0 (
// Equation(s):
// \Mux6~0_combout  = (\mode~combout  & (((\code~combout [1]) # (\code~combout [2])))) # (!\mode~combout  & (\code~combout [0] & (\code~combout [1] $ (\code~combout [2]))))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\code~combout [2]),
	.datad(\mode~combout ),
	.cin(gnd),
	.combout(\Mux6~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux6~0 .lut_mask = 16'hFC28;
defparam \Mux6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux6~1 (
// Equation(s):
// \Mux6~1_combout  = (\code~combout [0] & (!\code~combout [2] & (\code~combout [1] $ (!\mode~combout )))) # (!\code~combout [0] & (!\code~combout [1] & (\code~combout [2] & !\mode~combout )))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\code~combout [2]),
	.datad(\mode~combout ),
	.cin(gnd),
	.combout(\Mux6~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux6~1 .lut_mask = 16'h0812;
defparam \Mux6~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \code[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\code~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(code[3]));
// synopsys translate_off
defparam \code[3]~I .input_async_reset = "none";
defparam \code[3]~I .input_power_up = "low";
defparam \code[3]~I .input_register_mode = "none";
defparam \code[3]~I .input_sync_reset = "none";
defparam \code[3]~I .oe_async_reset = "none";
defparam \code[3]~I .oe_power_up = "low";
defparam \code[3]~I .oe_register_mode = "none";
defparam \code[3]~I .oe_sync_reset = "none";
defparam \code[3]~I .operation_mode = "input";
defparam \code[3]~I .output_async_reset = "none";
defparam \code[3]~I .output_power_up = "low";
defparam \code[3]~I .output_register_mode = "none";
defparam \code[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Mux6~2 (
// Equation(s):
// \Mux6~2_combout  = (\code~combout [3] & (\Mux6~0_combout )) # (!\code~combout [3] & ((\Mux6~1_combout )))

	.dataa(\Mux6~0_combout ),
	.datab(\Mux6~1_combout ),
	.datac(vcc),
	.datad(\code~combout [3]),
	.cin(gnd),
	.combout(\Mux6~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mux6~2 .lut_mask = 16'hAACC;
defparam \Mux6~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \code[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\code~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(code[0]));
// synopsys translate_off
defparam \code[0]~I .input_async_reset = "none";
defparam \code[0]~I .input_power_up = "low";
defparam \code[0]~I .input_register_mode = "none";
defparam \code[0]~I .input_sync_reset = "none";
defparam \code[0]~I .oe_async_reset = "none";
defparam \code[0]~I .oe_power_up = "low";
defparam \code[0]~I .oe_register_mode = "none";
defparam \code[0]~I .oe_sync_reset = "none";
defparam \code[0]~I .operation_mode = "input";
defparam \code[0]~I .output_async_reset = "none";
defparam \code[0]~I .output_power_up = "low";
defparam \code[0]~I .output_register_mode = "none";
defparam \code[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Mux5~0 (
// Equation(s):
// \Mux5~0_combout  = (\code~combout [3] & ((\code~combout [1]) # (\code~combout [0] $ (!\mode~combout )))) # (!\code~combout [3] & (\code~combout [1] $ (((\code~combout [0]) # (\mode~combout )))))

	.dataa(\code~combout [3]),
	.datab(\code~combout [0]),
	.datac(\code~combout [1]),
	.datad(\mode~combout ),
	.cin(gnd),
	.combout(\Mux5~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~0 .lut_mask = 16'hADB6;
defparam \Mux5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux5~1 (
// Equation(s):
// \Mux5~1_combout  = (\Mux5~0_combout  & ((\code~combout [2]) # ((\code~combout [0] & \code~combout [1]))))

	.dataa(\code~combout [2]),
	.datab(\code~combout [0]),
	.datac(\code~combout [1]),
	.datad(\Mux5~0_combout ),
	.cin(gnd),
	.combout(\Mux5~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~1 .lut_mask = 16'hEA00;
defparam \Mux5~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = (\code~combout [0] & (!\code~combout [1] & (\mode~combout  $ (\code~combout [3])))) # (!\code~combout [0] & ((\code~combout [1] & (!\mode~combout  & !\code~combout [3])) # (!\code~combout [1] & (\mode~combout  & \code~combout [3]))))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\mode~combout ),
	.datad(\code~combout [3]),
	.cin(gnd),
	.combout(\Mux4~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux4~0 .lut_mask = 16'h1224;
defparam \Mux4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux4~1 (
// Equation(s):
// \Mux4~1_combout  = (\code~combout [2] & (\code~combout [3] & !\Mux4~0_combout )) # (!\code~combout [2] & (!\code~combout [3] & \Mux4~0_combout ))

	.dataa(\code~combout [2]),
	.datab(\code~combout [3]),
	.datac(\Mux4~0_combout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\Mux4~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux4~1 .lut_mask = 16'h1818;
defparam \Mux4~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (\code~combout [0] & (!\code~combout [3] & (\code~combout [1] $ (!\mode~combout )))) # (!\code~combout [0] & ((\code~combout [1] & (!\mode~combout  & \code~combout [3])) # (!\code~combout [1] & (\mode~combout  & !\code~combout [3]))))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\mode~combout ),
	.datad(\code~combout [3]),
	.cin(gnd),
	.combout(\Mux3~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux3~0 .lut_mask = 16'h0492;
defparam \Mux3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux3~1 (
// Equation(s):
// \Mux3~1_combout  = (\code~combout [0] & ((\mode~combout  & ((!\code~combout [3]))) # (!\mode~combout  & (!\code~combout [1])))) # (!\code~combout [0] & (\mode~combout  $ (((\code~combout [1]) # (\code~combout [3])))))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\mode~combout ),
	.datad(\code~combout [3]),
	.cin(gnd),
	.combout(\Mux3~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux3~1 .lut_mask = 16'h07B6;
defparam \Mux3~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux3~2 (
// Equation(s):
// \Mux3~2_combout  = (\code~combout [2] & ((!\Mux3~1_combout ))) # (!\code~combout [2] & (\Mux3~0_combout ))

	.dataa(\Mux3~0_combout ),
	.datab(vcc),
	.datac(\code~combout [2]),
	.datad(\Mux3~1_combout ),
	.cin(gnd),
	.combout(\Mux3~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mux3~2 .lut_mask = 16'h0AFA;
defparam \Mux3~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (\code~combout [2] & (\mode~combout  & ((\code~combout [0]) # (\code~combout [1])))) # (!\code~combout [2] & (!\code~combout [1] & (\code~combout [0] $ (\mode~combout ))))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\code~combout [2]),
	.datad(\mode~combout ),
	.cin(gnd),
	.combout(\Mux2~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = 16'hE102;
defparam \Mux2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux2~1 (
// Equation(s):
// \Mux2~1_combout  = (\code~combout [0] & (((\code~combout [1] & !\code~combout [2])) # (!\mode~combout ))) # (!\code~combout [0] & ((\code~combout [1] & ((\mode~combout ))) # (!\code~combout [1] & (\code~combout [2]))))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\code~combout [2]),
	.datad(\mode~combout ),
	.cin(gnd),
	.combout(\Mux2~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~1 .lut_mask = 16'h5CBA;
defparam \Mux2~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux2~2 (
// Equation(s):
// \Mux2~2_combout  = (\code~combout [3] & (\Mux2~0_combout )) # (!\code~combout [3] & ((\Mux2~1_combout )))

	.dataa(\Mux2~0_combout ),
	.datab(\Mux2~1_combout ),
	.datac(vcc),
	.datad(\code~combout [3]),
	.cin(gnd),
	.combout(\Mux2~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~2 .lut_mask = 16'hAACC;
defparam \Mux2~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (\code~combout [0] & ((\code~combout [1] & (!\mode~combout )) # (!\code~combout [1] & ((!\code~combout [2]))))) # (!\code~combout [0] & (\code~combout [1] & ((\mode~combout ) # (!\code~combout [2]))))

	.dataa(\mode~combout ),
	.datab(\code~combout [0]),
	.datac(\code~combout [2]),
	.datad(\code~combout [1]),
	.cin(gnd),
	.combout(\Mux1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = 16'h670C;
defparam \Mux1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux1~1 (
// Equation(s):
// \Mux1~1_combout  = (\Mux1~0_combout  & (((\mode~combout  & !\code~combout [0])) # (!\code~combout [3]))) # (!\Mux1~0_combout  & (((\code~combout [0] & \code~combout [3]))))

	.dataa(\mode~combout ),
	.datab(\Mux1~0_combout ),
	.datac(\code~combout [0]),
	.datad(\code~combout [3]),
	.cin(gnd),
	.combout(\Mux1~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~1 .lut_mask = 16'h38CC;
defparam \Mux1~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (\code~combout [0] & (!\code~combout [1] & (!\code~combout [2] & \code~combout [3]))) # (!\code~combout [0] & (\code~combout [1] & (\code~combout [2] $ (\code~combout [3]))))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\code~combout [2]),
	.datad(\code~combout [3]),
	.cin(gnd),
	.combout(\Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = 16'h0640;
defparam \Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux0~1 (
// Equation(s):
// \Mux0~1_combout  = (\code~combout [0] & ((\code~combout [3]) # (\code~combout [1] $ (\code~combout [2])))) # (!\code~combout [0] & ((\code~combout [1]) # (\code~combout [2] $ (\code~combout [3]))))

	.dataa(\code~combout [0]),
	.datab(\code~combout [1]),
	.datac(\code~combout [2]),
	.datad(\code~combout [3]),
	.cin(gnd),
	.combout(\Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~1 .lut_mask = 16'hEF7C;
defparam \Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Mux0~2 (
// Equation(s):
// \Mux0~2_combout  = (\mode~combout  & (\Mux0~0_combout )) # (!\mode~combout  & ((!\Mux0~1_combout )))

	.dataa(\Mux0~0_combout ),
	.datab(\mode~combout ),
	.datac(vcc),
	.datad(\Mux0~1_combout ),
	.cin(gnd),
	.combout(\Mux0~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~2 .lut_mask = 16'h88BB;
defparam \Mux0~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \segments_out[0]~I (
	.datain(\Mux6~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(segments_out[0]));
// synopsys translate_off
defparam \segments_out[0]~I .input_async_reset = "none";
defparam \segments_out[0]~I .input_power_up = "low";
defparam \segments_out[0]~I .input_register_mode = "none";
defparam \segments_out[0]~I .input_sync_reset = "none";
defparam \segments_out[0]~I .oe_async_reset = "none";
defparam \segments_out[0]~I .oe_power_up = "low";
defparam \segments_out[0]~I .oe_register_mode = "none";
defparam \segments_out[0]~I .oe_sync_reset = "none";
defparam \segments_out[0]~I .operation_mode = "output";
defparam \segments_out[0]~I .output_async_reset = "none";
defparam \segments_out[0]~I .output_power_up = "low";
defparam \segments_out[0]~I .output_register_mode = "none";
defparam \segments_out[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \segments_out[1]~I (
	.datain(\Mux5~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(segments_out[1]));
// synopsys translate_off
defparam \segments_out[1]~I .input_async_reset = "none";
defparam \segments_out[1]~I .input_power_up = "low";
defparam \segments_out[1]~I .input_register_mode = "none";
defparam \segments_out[1]~I .input_sync_reset = "none";
defparam \segments_out[1]~I .oe_async_reset = "none";
defparam \segments_out[1]~I .oe_power_up = "low";
defparam \segments_out[1]~I .oe_register_mode = "none";
defparam \segments_out[1]~I .oe_sync_reset = "none";
defparam \segments_out[1]~I .operation_mode = "output";
defparam \segments_out[1]~I .output_async_reset = "none";
defparam \segments_out[1]~I .output_power_up = "low";
defparam \segments_out[1]~I .output_register_mode = "none";
defparam \segments_out[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \segments_out[2]~I (
	.datain(\Mux4~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(segments_out[2]));
// synopsys translate_off
defparam \segments_out[2]~I .input_async_reset = "none";
defparam \segments_out[2]~I .input_power_up = "low";
defparam \segments_out[2]~I .input_register_mode = "none";
defparam \segments_out[2]~I .input_sync_reset = "none";
defparam \segments_out[2]~I .oe_async_reset = "none";
defparam \segments_out[2]~I .oe_power_up = "low";
defparam \segments_out[2]~I .oe_register_mode = "none";
defparam \segments_out[2]~I .oe_sync_reset = "none";
defparam \segments_out[2]~I .operation_mode = "output";
defparam \segments_out[2]~I .output_async_reset = "none";
defparam \segments_out[2]~I .output_power_up = "low";
defparam \segments_out[2]~I .output_register_mode = "none";
defparam \segments_out[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \segments_out[3]~I (
	.datain(\Mux3~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(segments_out[3]));
// synopsys translate_off
defparam \segments_out[3]~I .input_async_reset = "none";
defparam \segments_out[3]~I .input_power_up = "low";
defparam \segments_out[3]~I .input_register_mode = "none";
defparam \segments_out[3]~I .input_sync_reset = "none";
defparam \segments_out[3]~I .oe_async_reset = "none";
defparam \segments_out[3]~I .oe_power_up = "low";
defparam \segments_out[3]~I .oe_register_mode = "none";
defparam \segments_out[3]~I .oe_sync_reset = "none";
defparam \segments_out[3]~I .operation_mode = "output";
defparam \segments_out[3]~I .output_async_reset = "none";
defparam \segments_out[3]~I .output_power_up = "low";
defparam \segments_out[3]~I .output_register_mode = "none";
defparam \segments_out[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \segments_out[4]~I (
	.datain(\Mux2~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(segments_out[4]));
// synopsys translate_off
defparam \segments_out[4]~I .input_async_reset = "none";
defparam \segments_out[4]~I .input_power_up = "low";
defparam \segments_out[4]~I .input_register_mode = "none";
defparam \segments_out[4]~I .input_sync_reset = "none";
defparam \segments_out[4]~I .oe_async_reset = "none";
defparam \segments_out[4]~I .oe_power_up = "low";
defparam \segments_out[4]~I .oe_register_mode = "none";
defparam \segments_out[4]~I .oe_sync_reset = "none";
defparam \segments_out[4]~I .operation_mode = "output";
defparam \segments_out[4]~I .output_async_reset = "none";
defparam \segments_out[4]~I .output_power_up = "low";
defparam \segments_out[4]~I .output_register_mode = "none";
defparam \segments_out[4]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \segments_out[5]~I (
	.datain(\Mux1~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(segments_out[5]));
// synopsys translate_off
defparam \segments_out[5]~I .input_async_reset = "none";
defparam \segments_out[5]~I .input_power_up = "low";
defparam \segments_out[5]~I .input_register_mode = "none";
defparam \segments_out[5]~I .input_sync_reset = "none";
defparam \segments_out[5]~I .oe_async_reset = "none";
defparam \segments_out[5]~I .oe_power_up = "low";
defparam \segments_out[5]~I .oe_register_mode = "none";
defparam \segments_out[5]~I .oe_sync_reset = "none";
defparam \segments_out[5]~I .operation_mode = "output";
defparam \segments_out[5]~I .output_async_reset = "none";
defparam \segments_out[5]~I .output_power_up = "low";
defparam \segments_out[5]~I .output_register_mode = "none";
defparam \segments_out[5]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \segments_out[6]~I (
	.datain(\Mux0~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(segments_out[6]));
// synopsys translate_off
defparam \segments_out[6]~I .input_async_reset = "none";
defparam \segments_out[6]~I .input_power_up = "low";
defparam \segments_out[6]~I .input_register_mode = "none";
defparam \segments_out[6]~I .input_sync_reset = "none";
defparam \segments_out[6]~I .oe_async_reset = "none";
defparam \segments_out[6]~I .oe_power_up = "low";
defparam \segments_out[6]~I .oe_register_mode = "none";
defparam \segments_out[6]~I .oe_sync_reset = "none";
defparam \segments_out[6]~I .operation_mode = "output";
defparam \segments_out[6]~I .output_async_reset = "none";
defparam \segments_out[6]~I .output_power_up = "low";
defparam \segments_out[6]~I .output_register_mode = "none";
defparam \segments_out[6]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
